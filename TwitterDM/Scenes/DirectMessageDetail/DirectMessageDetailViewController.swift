//
//  DirectMessageDetailViewController.swift
//  TwitterDM
//
//  Created Shashank Shandilya on 6/17/18.
//  Copyright © 2018 org. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit
import SlackTextViewController

class DirectMessageDetailViewController: SLKTextViewController, DirectMessageDetailViewProtocol {
    let activityIndicator: UIActivityIndicatorView = UIActivityIndicatorView()
    var presenter: DirectMessageDetailPresenterProtocol?
    var conversation: DirectMessageDetailViewModel.ViewModel? {
        didSet {
            self.tableView?.reloadData()
            self.navigationItem.title = conversation?.user.name
        }
    }
    
    override init?(tableViewStyle style: UITableViewStyle) {
        super.init(tableViewStyle: .plain)
    }
    
    required init?(coder decoder: NSCoder) {
        super.init(coder: decoder)
    }
    
    override class func tableViewStyle(for decoder: NSCoder) -> UITableViewStyle {
        return .plain
    }
    
	override func viewDidLoad() {
        super.viewDidLoad()
        view.addSubview(activityIndicator)
        activityIndicator.translatesAutoresizingMaskIntoConstraints = false
        let hC = activityIndicator.centerXAnchor.constraint(equalTo: view.centerXAnchor)
        let vC = activityIndicator.centerYAnchor.constraint(equalTo: view.centerYAnchor)
        NSLayoutConstraint.activate([hC, vC])
        presenter?.viewIsLoaded()
    }

    func showLoader() {
        activityIndicator.startAnimating()
    }
    
    func hideLoader() {
        activityIndicator.stopAnimating()
    }
    
    func showError(errorMessage: String) {
        let alert = UIAlertController(title: nil, message: errorMessage, preferredStyle: .alert)
        alert.addAction(UIAlertAction(title: "OK", style: .cancel, handler: nil))
        navigationController?.present(alert, animated: true, completion: nil)
    }
}

extension DirectMessageDetailViewController {
    override func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        if conversation == nil {
            return 0
        }
        
        return conversation!.messages.count
    }
    
    override func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let message = conversation!.messages[indexPath.row]
        var cell = tableView.dequeueReusableCell(withIdentifier: "cell")
        if cell == nil {
            cell = UITableViewCell(style: .default, reuseIdentifier: "cell")
        }
        cell?.contentView.backgroundColor = message.isSent ? UIColor.yellow: UIColor.lightGray
        cell?.textLabel?.text = message.text
        cell?.transform = tableView.transform
        return cell!
    }
    
    override func didPressRightButton(_ sender: Any?) {
        //Send button tapped.
        presenter?.userTappedOnSend(with: textView.text)
        super.didPressRightButton(sender)
    }
}
